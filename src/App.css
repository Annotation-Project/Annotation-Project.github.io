@import url('https://fonts.googleapis.com/css2?family=Noto+Serif+Bengali:wght@100;200;300;400;500;600;700;800;900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');

:root {
    --colorPrimary: #006bb7;
    --colorPrimaryVariant: #009ce9;
    --colorOnPrimary: #ffffff;
    --colorOnPrimaryVariant: #fefefe;
    --colorPrimaryBackground: #FFFFFF;
    --colorOnPrimaryBackground: #000000;
    --colorPrimaryBackgroundVariant: #e6e6e6;
    --colorOnPrimaryBackgroundVariant: #191919;

    --colorSecondary: #000;
    --colorSecondaryVariant: #a943e9;
    --colorOnSecondary: #ffffff;
    --colorOnSecondaryVariant: #fefefe;
    --colorSecondaryBackground: #FFFFFF;
    --colorOnSecondaryBackground: #000000;
    --colorSecondaryBackgroundVariant: #FFFFFF;
    --colorOnSecondaryBackgroundVariant: #191919;

    --fontSizeXL: 3rem;
    --lineHeightXL: 3.5rem;
    --fontSizeL: 2.25rem;
    --lineHeightL: 2.75rem;
    --fontSizeM: 1.25rem;
    --lineHeightM: 1.5rem;
    --fontSizeS: 1rem;
    --lineHeightS: 1.5rem;
    --fontSizeES: 0.75rem;
    --lineHeightES: 1.25rem;

    --marginEL: 2rem;
    --marginL: 1rem;
    --marginM: 0.75rem;
    --marginS: 0.5rem;
    --marginES: 0.25rem;
    --marginEES: 0.15rem;

    --paddingEL: 2rem;
    --paddingL: 1rem;
    --paddingM: 0.75rem;
    --paddingS: 0.5rem;
    --paddingES: 0.25rem;
    --paddingEES: 0.15rem;

    --radiusRound: 50rem;
    --radiusEEL: 4rem;
    --radiusEL: 2rem;
    --radiusL: 1rem;
    --radiusM: 0.75rem;
    --radiusS: 0.5rem;
    --radiusES: 0.25rem;
    --radiusEES: 0.125rem;

    --borderL: 3px;
    --borderM: 2px;
    --borderS: 1px;

    --shadowEL: 1rem;
    --shadowL: 0.75rem;
    --shadowM: 0.5rem;
    --shadowS: 0.25rem;
    --shadowES: 0.125rem;


}

@keyframes rotate {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Roboto', sans-serif;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

*::-webkit-scrollbar {
    display: none;
}

::placeholder {
    color: currentColor;
    opacity: 0.75;
}

::-ms-input-placeholder {
    color: currentColor;
    opacity: 0.75;
}

body {
    min-width: 1024px;
}

input {
    background: transparent;
    border: none;
    outline: none;
}

.languageEnglish {
    font-family: 'Poppins', sans-serif;
}

.languageBengali {
    font-family: 'Noto Serif Bengali', sans-serif;
}

.screen {
    height: 100vh;
    display: flex;
    flex-direction: column;
    align-items: stretch;
}

.btn {
    border: none;
    outline: none;
    font-size: var(--fontSizeS);
    padding: var(--paddingS) var(--paddingL);
    font-weight: bold;
    border-radius: var(--radiusRound);
    cursor: pointer;
    background-color: var(--colorSecondaryVariant);
    color: var(--colorOnSecondaryVariant);
    box-shadow: 0 0 var(--shadowS) 0 black;
}

.refreshing {
    animation: rotate infinite 1s linear;
}

#header {
    position: sticky;
    box-shadow: 0 0 var(--shadowM) 0 black;
    padding: var(--paddingS) var(--paddingL);
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: var(--colorPrimary);
    color: var(--colorOnPrimary);
}

#header h1 {
    font-size: var(--fontSizeL);
}

#header > .left,
#header > .right {
    height: 100%;
    display: flex;
    align-items: center;
}

#header > .left > * {
    margin-right: var(--marginM);
}

#header > .right > * {
    margin-left: var(--marginM);
}

.menuItem {
    display: flex;
    align-items: center;
    padding: var(--paddingES) var(--paddingL);
    border-radius: var(--radiusRound);
    cursor: pointer;
    position: relative;
    background-color: var(--colorPrimaryVariant);
    color: var(--colorOnPrimaryVariant);
    border: var(--borderM) solid var(--colorPrimaryVariant);
    transition: all ease-in-out 0.3s;
}

.menuItem:hover {
    background-color: var(--colorSecondaryVariant);
    color: var(--colorOnSecondaryVariant);
    border: var(--borderM) solid var(--colorOnPrimaryVariant);
}

.menuItem p {
    font-size: var(--fontSizeS);
    line-height: var(--lineHeightS);
    font-weight: bold;
    margin-left: var(--marginM);
}

.menuItem svg {
    height: var(--lineHeightS);
    width: var(--lineHeightS);
}

#downloadArea {
    position: fixed;
    background-color: var(--colorPrimaryBackground);
    height: 75%;
    width: 75%;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border-radius: var(--radiusS);
    padding: var(--paddingL);
    display: flex;
    flex-direction: column;
    align-items: stretch;
    box-shadow: 0 0 var(--shadowS) 0 var(--colorOnPrimaryBackground);
    z-index: 5;
    min-width: 768px;
}

.downloadMain {
    flex: 1 1;
    display: flex;
    height: 0;
}

.downloadMain .left, .downloadMain .right {
    flex: 1 1;
    display: flex;
    flex-direction: column;
}

.downloadMain .boxedContainerMain {
    overflow: auto;
    height: 100%;
}

#downloadOptions {
    display: flex;
    flex-direction: column;
}

#selectFileType {
    font-size: var(--fontSizeS);
    line-height: var(--lineHeightS);
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.fileType {
    display: flex;
}

.fileType > * {
    cursor: pointer;
}

.fileType label {
    padding: var(--paddingS) var(--paddingM);
}

#downloadFileBtn {
    margin: var(--marginS);
    padding: var(--paddingS);
    border-radius: var(--radiusRound);
    outline: none;
    border: none;
    box-shadow: 0 0 var(--shadowS) 0 black;
    font-size: var(--fontSizeM);
    line-height: var(--lineHeightM);
    font-weight: bold;
    background-color: var(--colorPrimary);
    color: var(--colorOnPrimary);
    cursor: pointer;
}

.tabs {
    display: flex;
    align-items: center;
}

#mainTabs {
    box-shadow: 0 0 var(--shadowM) 0 black;
    border-bottom: var(--borderM) solid var(--colorPrimaryBackground);
}

.tab {
    flex: 1 1;
    text-align: center;
    background-color: var(--colorPrimaryVariant);
    color: var(--colorPrimaryBackground);
    font-weight: bold;
    cursor: pointer;
    transition: all ease-in-out 0.3s;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

#mainTabs .tab {
    font-size: var(--fontSizeM);
    line-height: var(--lineHeightM);
    padding: var(--paddingM);
}

.tab.active {
    background-color: var(--colorPrimaryBackground);
    color: var(--colorPrimaryVariant);
}

.tab:hover {
    opacity: 0.5;
}

.tabContent {
    flex: 1 1;
    display: flex;
    flex-direction: column;
    overflow: hidden;
}

#main {
    display: flex;
    height: 0;
    flex: 1 1;
}

#main > .left,
#main > .right {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    min-width: 320px;
    overflow: hidden;
    transition: all ease-in-out 0.3s;
    background-color: var(--colorPrimaryBackground);
}

#main > .left {
    flex: 3 3;
}

#main > .right {
    flex: 1 1;
    border-left: var(--borderM) solid black;
}

#main > .right.collapse {
    display: none;
}

.boxedContainer {
    border-radius: var(--radiusES);
    display: flex;
    flex-direction: column;
    margin: var(--marginS);
    padding: var(--paddingS);
    flex: 1 1;
    min-height: calc(var(--lineHeightM) + calc(var(--paddingS) * 2) + calc(var(--paddingES) * 2));
    overflow: hidden;
    transition: all ease-in-out 0.3s;
    background-color: var(--colorPrimaryBackgroundVariant);
    box-shadow: 0 0 var(--shadowS) 0;
}

.boxedContainer.staticSize {
    flex: 0 0 auto;
    transition: all ease-in-out 0.3s;
}

.boxedContainer.collapsed {
    flex: 0 0 0;
}

.boxedContainer.collapsed .boxedContainerTop {
    border-bottom: none;
}

.boxedContainerTopExtra {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    width: 100%;
    margin-bottom: var(--shadowS);
}

.boxedContainerTopExtra > .boxedContainerTop {
    margin: 0;
    box-shadow: none;
}

.boxedContainerTop {
    display: flex;
    align-items: center;
    justify-content: space-between;
    column-gap: var(--marginM);
    padding: var(--paddingES) var(--paddingM);
    font-size: var(--fontSizeM);
    line-height: var(--lineHeightM);
    font-weight: bold;
    color: var(--colorOnPrimaryBackgroundVariant);
    margin-bottom: var(--shadowS);
    border-bottom: var(--borderM) solid black;
    transition: all ease-in-out 0.3s;
}

.boxedContainerTop svg {
    height: var(--lineHeightM);
    width: var(--lineHeightM);
}

.heading {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.searchBox {
    font-size: var(--fontSizeS);
    line-height: inherit;
    color: currentcolor;
    min-width: 0;
}

.boxedContainerTop > *:first-child {
    flex: 1 1;
}

.boxedContainerTop svg {
    cursor: pointer;
}

#paragraphContainer {
    height: 100%;
    width: 100%;
    padding: var(--paddingES) var(--paddingS) var(--paddingS) var(--paddingS);
}

.paragraph {
    width: 100%;
    border: none;
    resize: none;
    outline: none;
    height: 100%;
    font-size: var(--fontSizeS);
    text-align: justify;
    white-space: nowrap;
    line-height: var(--lineHeightS);
    background: transparent;
}

#paragraphFile {
    display: none;
}

#annotationsContainerExtra {
    height: 100%;
    width: 100%;
    padding: var(--paddingES) var(--paddingS) var(--paddingS) var(--paddingS);
    overflow: auto;
}

.annotationsContainer {
    height: 100%;
    width: 100%;
    overflow: auto;
    display: flex;
    flex-direction: column;
}

.annotationText {
    white-space: nowrap;
    font-size: var(--fontSizeS);
    line-height: var(--lineHeightS);
    cursor: text;
}

.annotationText, .annotationText * {
    -webkit-user-select: text;
    -moz-user-select: text;
    -ms-user-select: text;
    user-select: text;
}

.annotationText > span {
    font-weight: bold;
}

.annotationText > span span {
    mix-blend-mode: multiply;
}

#assignTagMain {
    padding: var(--paddingM);
    display: flex;
    flex-direction: column;
    align-items: stretch;
    row-gap: var(--marginS);
}

.selectedTextArea {
    background-color: var(--colorPrimaryBackground);
    border-radius: var(--radiusES);
    border: var(--borderS) solid black;
    padding: var(--paddingEES) var(--paddingM);
    min-height: calc(var(--lineHeightES) + var(--lineHeightS) + calc(var(--paddingEES) * 2));
    display: flex;
    flex-direction: column;
}

.selectedTextArea span {
    font-size: var(--fontSizeES);
    line-height: var(--lineHeightES);
    text-decoration: underline;
    color: var(--colorOnPrimaryBackgroundVariant);
}

.selectedText {
    font-size: var(--fontSizeS);
    line-height: var(--lineHeightS);
    min-height: var(--lineHeightS);
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

#assignTagTabs {
    box-shadow: 0 0 var(--shadowS) 0 black;
}

#assignTagTabs .tab {
    font-size: var(--fontSizeS);
    line-height: var(--lineHeightS);
    padding: var(--paddingS);
}

.tagSelectionArea {
    display: flex;
    flex-direction: column;
}

.availableTags {
    display: flex;
    overflow: auto;
    min-height: calc(var(--lineHeightS) + calc(var(--paddingEES) * 2) + calc(var(--borderM) * 2));
    align-items: center;
    column-gap: var(--marginM);
    padding: var(--paddingS);
}

.suggestedTagContainer {
    display: flex;
    align-items: center;
    column-gap: var(--marginS);
    padding: var(--paddingEES) var(--paddingM);
    border: var(--borderS) solid black;
    border-radius: var(--radiusRound);
    cursor: pointer;
    box-shadow: 0 0 var(--shadowES) 0 black;
}

.suggestedTag {
    white-space: nowrap;
    font-size: var(--fontSizeS);
    line-height: var(--lineHeightS);
}

.suggestedTagContainer svg {
    height: var(--lineHeightS);
    width: var(--lineHeightS);
}

.tabContainer {
    background-color: var(--colorPrimaryBackground);
    border-radius: var(--radiusES);
    border: var(--borderS) solid black;
    overflow: hidden;
}

.tagSelectionArea  .message {
    font-size: var(--fontSizeS);
    line-height: var(--lineHeightS);
}

#tagsContainer, #assignedTagContainer {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    overflow: auto;
    flex: 1 1 0;
}

.tagContainer {
    display: flex;
    flex-direction: column;
}

.tagsContainerChild {
    margin-left: var(--marginL);
    border-left: var(--borderS) solid black;
    flex: 0 0 auto;
}

#tagInput {
    color: var(--colorOnPrimaryVariant);
    outline: none;
    border: none;
    border-bottom: var(--borderS) solid var(--colorOnPrimaryVariant);
    font-size: var(--fontSizeS);
    flex: 1 1 0;
    padding: var(--paddingES) var(--paddingS);
    min-width: 0;
}

.tag, .twTag {
    display: flex;
    align-items: center;
    padding: var(--paddingS) var(--paddingL);
    column-gap: var(--marginS);
}

.tag svg, .twTag svg {
    cursor: pointer;
}

.tag svg {
    height: var(--lineHeightS);
    width: var(--lineHeightS);
}

.twTag svg {
    height: var(--lineHeightM);
    width: var(--lineHeightM);
}

.tagName, .twTagName {
    flex: 1 1;
    width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.tagWord:not(:last-child) {
    border-bottom: 1px solid black;
}

.tagWord .tagsContainerChild {
    border: none;
}

.tagWord .tag {
    border-bottom-left-radius: var(--radiusS);
}

.tagName {
    font-size: var(--fontSizeS);
    line-height: var(--lineHeightS);
}

.twTagName {
    font-size: var(--fontSizeM);
    line-height: var(--lineHeightM);
}

.tagWord .tag .tagName {
    font-size: var(--fontSizeES);
    line-height: var(--lineHeightES);
}

.tagWord .tag svg {
    height: var(--lineHeightES);
    width: var(--lineHeightES);
}

input[type="color"] {
    height: var(--lineHeightS);
    width: var(--lineHeightS);
    -webkit-appearance: none;
}

input[type="color"]::-webkit-color-swatch-wrapper {
    padding: 0;
}

.tagWordDetails {
    display: flex;
    width: 100%;
    align-items: center;
}

.twTagDetails {
    display: flex;
    flex-direction: column;
    flex: 1 1;
}

.twGender {
    font-size: var(--fontSizeES);
    line-height: var(--lineHeightES);
}

.tagWordDetails p, .twTag span {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.tagWordDetails p {
    font-weight: bold;
}

.tagWordDetails svg {
    height: var(--lineHeightS);
    width: var(--lineHeightS);
    cursor: pointer;
    font-weight: normal;
}

.twTagsContainer {
    display: flex;
}

.twTag svg {
    cursor: pointer;
}

.paragraphAreaBottom {
    margin: var(--marginL);
    display: flex;
    align-items: center;
    justify-content: flex-end;
}

.languageSelectionArea {
    position: relative;
    font-size: var(--fontSizeS);
    line-height: var(--lineHeightM);
    min-width: 150px;
    width: max-content;
    margin-right: var(--marginEL);
}

.allLanguages {
    position: absolute;
    left: 0;
    right: 0;
    bottom: 100%;
    border: var(--borderS) solid black;
    border-radius: var(--radiusM);
    display: none;
    flex-direction: column;
    background-color: white;
}

.selectedLanguage {
    border: var(--borderS) solid black;
    border-radius: var(--radiusM);
}

.selectedLanguage p,
.allLanguages p {
    padding: 0 var(--paddingL);
    cursor: pointer;
}

.languageSelectionArea:hover .allLanguages {
    display: flex;
    border-radius: var(--radiusM) var(--radiusM) 0 0;
    border-bottom-color: white;
}

.languageSelectionArea:hover .selectedLanguage  {
    border-radius: 0 0 var(--radiusM) var(--radiusM) ;
}

#assignRelation {
    flex: 1 1;
    align-content: flex-start;
    justify-content: center;
    display: flex;
    flex-wrap: wrap;
    row-gap: 2%;
    column-gap: 2%;
    flex-direction: row;
    overflow: auto;
}

.relationItem {
    display: flex;
    justify-content: space-between;
    padding: var(--paddingM);
    column-gap: var(--marginL);
    width: 49%;
    border-radius: var(--radiusES);
    box-shadow: 0 0 var(--shadowES) 0 black;
    background-color: var(--colorPrimaryBackground);
    min-width: 550px;
}

.relationName {
    font-size: var(--fontSizeS);
    line-height: var(--lineHeightM);
    font-weight: bold;
    width: 110px;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

.relationName:first-child {
    text-align: start;
}

.relationName:last-child {
    text-align: end;
}

.dropdown {
    font-size: var(--fontSizeS);
    line-height: var(--lineHeightM);
    position: relative;
    flex: 1 1;
    border-bottom: var(--borderS) solid var(--colorOnPrimaryBackground);
}

.dialogBackground {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background: black;
    opacity: 0.5;
    z-index: 0;
}

.selected, .option {
    text-align: center;
    cursor: pointer;
    padding: 0 var(--paddingM);
    height: 100%;
}

.option:hover {
    background-color: var(--colorPrimaryVariant);
    color: var(--colorOnPrimaryVariant);
}

.dropdownContainer {
    position: absolute;
    top: 120%;
    left: 0;
    right: 0;
    background-color: var(--colorPrimaryBackground);
    border-radius: var(--radiusES);
    box-shadow: 0 0 var(--shadowES) 0 black;
    z-index: 5;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    overflow: auto;
    height: 500px;
}

.relationItem span {
    line-height: var(--lineHeightM);
    font-size: var(--fontSizeES);
}